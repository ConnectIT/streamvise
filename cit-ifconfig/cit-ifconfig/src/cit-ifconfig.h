
#ifndef _H_cit_ifconfig
#define _H_cit_ifconfig
/* 
 * Copyright (c) 2013, Chris Mavrakis, All Rights Reserved.
 * Full license can be found in LICENSE file.

*** Generated by yangdump 2.2.1731

    Combined SIL header
    module cit-ifconfig
    revision 2012-02-14
    namespace http://netconfcentral.org/ns/cit-ifconfig
    organization ConnectIT

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_cit_ifconfig_M_cit_ifconfig (const xmlChar *)"cit-ifconfig"
#define y_cit_ifconfig_R_cit_ifconfig (const xmlChar *)"2012-02-14"

#define y_cit_ifconfig_N_ifconfig (const xmlChar *)"ifconfig"
#define y_cit_ifconfig_N_interface (const xmlChar *)"interface"
#define y_cit_ifconfig_N_ip_address (const xmlChar *)"ip-address"
#define y_cit_ifconfig_N_mac_address (const xmlChar *)"mac-address"
#define y_cit_ifconfig_N_mtu (const xmlChar *)"mtu"
#define y_cit_ifconfig_N_name (const xmlChar *)"name"
#define y_cit_ifconfig_N_subnet_mask (const xmlChar *)"subnet-mask"
#define y_cit_ifconfig_N_up (const xmlChar *)"up"

/* list /ifconfig/interface */
typedef struct y_cit_ifconfig_T_ifconfig_interface_ {
    dlq_hdr_t qhdr;
    xmlChar *name;
    boolean up;
    uint32 mtu;
    val_value_t *ip_address;
    val_value_t *subnet_mask;
    xmlChar *mac_address;
} y_cit_ifconfig_T_ifconfig_interface;

/* container /ifconfig */
typedef struct y_cit_ifconfig_T_ifconfig_ {
    dlq_hdr_t interface;
} y_cit_ifconfig_T_ifconfig;
/********************************************************************
* FUNCTION y_cit_ifconfig_init
* 
* initialize the cit-ifconfig server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_cit_ifconfig_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_cit_ifconfig_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_cit_ifconfig_init2 (void);

/********************************************************************
* FUNCTION y_cit_ifconfig_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void y_cit_ifconfig_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif
